/**
 * ü¶¶ GUAT√Å SMART HYBRID SERVICE - Chatbot verdadeiramente inteligente
 * Combina conhecimento local + web search inteligente + personalidade natural
 */

import { supabase } from "@/integrations/supabase/client";

export interface SmartHybridQuery {
  question: string;
  userId?: string;
  sessionId?: string;
  userLocation?: string;
  conversationHistory?: string[];
  userPreferences?: any;
}

export interface SmartHybridResponse {
  answer: string;
  confidence: number;
  sources: string[];
  processingTime: number;
  learningInsights: any;
  adaptiveImprovements: string[];
  memoryUpdates: any[];
  personality: string;
  emotionalState: string;
  followUpQuestions: string[];
  usedWebSearch: boolean;
  partnerSuggestion?: string;
}

class GuataSmartHybridService {
  private personality = {
    name: "Guat√°",
    species: "capivara",
    role: "guia de turismo especializado",
    traits: ["conhecedor", "prestativo", "confi√°vel", "apaixonado por MS"],
    speakingStyle: "conversacional e natural",
    emotions: ["interessado", "prestativo", "confi√°vel", "orgulhoso"]
  };

  // Base de conhecimento local expandida do MS
  private readonly LOCAL_KNOWLEDGE = {
    // DESTINOS PRINCIPAIS
    'bonito': {
      title: 'Bonito - Capital Mundial do Ecoturismo',
      content: 'Bonito √© mundialmente reconhecida como a Capital do Ecoturismo, famosa por suas √°guas cristalinas e preserva√ß√£o ambiental. Principais atrativos: Rio Sucuri (flutua√ß√£o), Gruta do Lago Azul (mergulho), Gruta da Anhumas (rapel), Buraco das Araras (observa√ß√£o de aves), Rio da Prata (flutua√ß√£o), Balne√°rio Municipal. Melhor √©poca: abril a outubro (per√≠odo seco).',
      category: 'destinos',
      keywords: ['bonito', 'ecoturismo', '√°guas cristalinas', 'flutua√ß√£o', 'gruta', 'rio sucuri', 'lago azul']
    },
    'pantanal': {
      title: 'Pantanal - Patrim√¥nio Mundial da UNESCO',
      content: 'O Pantanal √© a maior plan√≠cie alagada do mundo, reconhecido pela UNESCO como Patrim√¥nio Mundial. Em MS, principais portais: Corumb√°, Miranda e Aquidauana. Atividades: observa√ß√£o de on√ßas-pintadas, saf√°ris fotogr√°ficos, mais de 600 esp√©cies de aves, pesca esportiva, passeios de barco. Melhor √©poca: seca (maio a outubro).',
      category: 'destinos',
      keywords: ['pantanal', 'unesco', 'on√ßa-pintada', 'saf√°ri', 'pesca', 'corumb√°', 'miranda', 'aquidauana']
    },
    'campo grande': {
      title: 'Campo Grande - Portal de Entrada do MS',
      content: 'Capital conhecida como "Cidade Morena". Principais atra√ß√µes: Feira Central (gastronomia local), Parque das Na√ß√µes Ind√≠genas, Memorial da Cultura Ind√≠gena, Museu de Arte Contempor√¢nea, Mercad√£o Municipal, Pra√ßa do R√°dio. Centro de conven√ß√µes e eventos.',
      category: 'destinos',
      keywords: ['campo grande', 'cidade morena', 'feira central', 'parque na√ß√µes ind√≠genas', 'mercad√£o']
    },
    'corumb√°': {
      title: 'Corumb√° - Capital do Pantanal',
      content: 'Portal principal do Pantanal, conhecida por sua rica hist√≥ria e cultura. Atra√ß√µes: Porto Geral, Casario do Porto, Estrada Parque do Pantanal, Forte Coimbra, Museu de Hist√≥ria do Pantanal. Ponto de partida para saf√°ris e pesca esportiva.',
      category: 'destinos',
      keywords: ['corumb√°', 'porto geral', 'casario', 'estrada parque', 'forte coimbra']
    },
    'tr√™s lagoas': {
      title: 'Tr√™s Lagoas - Portal do Pantanal Sul',
      content: 'Conhecida como "Cidade das √Åguas", importante centro industrial e tur√≠stico. Atra√ß√µes: Lagoa Maior, Lagoa Menor, Lagoa do Sapo, Festa do Peixe, Catedral de S√£o Carlos, Museu Hist√≥rico. Acesso ao Pantanal Sul.',
      category: 'destinos',
      keywords: ['tr√™s lagoas', 'lagoa maior', 'festa do peixe', 'catedral s√£o carlos']
    },
    'dourados': {
      title: 'Dourados - Capital do Agroneg√≥cio',
      content: 'Segunda maior cidade do MS, importante centro do agroneg√≥cio. Atra√ß√µes: Parque Antenor Martins, Museu Hist√≥rico, Catedral Nossa Senhora da Candel√°ria, Feira Central, Universidade Federal da Grande Dourados.',
      category: 'destinos',
      keywords: ['dourados', 'agroneg√≥cio', 'parque antenor martins', 'catedral candel√°ria']
    },

    // GASTRONOMIA
    'gastronomia': {
      title: 'Gastronomia Sul-Mato-Grossense',
      content: 'A culin√°ria mistura influ√™ncias paraguaias, bolivianas e ind√≠genas. Pratos t√≠picos: sob√° (macarr√£o japon√™s adaptado), chipa (p√£o de queijo paraguaio), churrasco pantaneiro, sopa paraguaia, terer√© (erva-mate gelada), pacu assado, arroz carreteiro. Onde comer: Feira Central de Campo Grande, Mercad√£o Municipal, restaurantes especializados.',
      category: 'gastronomia',
      keywords: ['comida', 'gastronomia', 'culin√°ria', 'sob√°', 'chipa', 'churrasco pantaneiro', 'sopa paraguaia', 'terer√©', 'pacu']
    },

    // INFRAESTRUTURA
    'rota bioceanica': {
      title: 'Rota Bioce√¢nica - Conex√£o MS-Chile',
      content: 'Corredor rodovi√°rio estrat√©gico que conecta Mato Grosso do Sul ao Chile, passando pelo Paraguai e Argentina. Em MS, passa por Campo Grande, Ponta Por√£ e Porto Murtinho. Importante para com√©rcio e turismo internacional. Facilita acesso ao Oceano Pac√≠fico.',
      category: 'infraestrutura',
      keywords: ['rota bioceanica', 'bioceanica', 'corredor', 'chile', 'paraguai', 'argentina', 'porto murtinho', 'ponta por√£']
    },

    // EVENTOS
    'eventos': {
      title: 'Eventos e Festivais em MS',
      content: 'Principais eventos: Festival de Inverno de Bonito (julho), Festa do Peixe de Tr√™s Lagoas (setembro), Festival Am√©rica do Sul em Corumb√° (abril), Encontro de Carros Antigos em Campo Grande, Festa do Divino Esp√≠rito Santo em Miranda, Festa de S√£o Jo√£o em Aquidauana.',
      category: 'eventos',
      keywords: ['eventos', 'festivais', 'festa do peixe', 'festival inverno', 'am√©rica do sul', 's√£o jo√£o']
    },

    // CULTURA E HIST√ìRIA
    'cultura': {
      title: 'Cultura e Hist√≥ria de MS',
      content: 'MS foi criado em 1977, desmembrado de Mato Grosso. Forte influ√™ncia ind√≠gena (Terena, Guarani-Kaiow√°), paraguaia e boliviana. Campo Grande fundada em 1899. Rico em tradi√ß√µes, artesanato ind√≠gena, m√∫sica regional e festas populares.',
      category: 'cultura',
      keywords: ['cultura', 'hist√≥ria', 'ind√≠gena', 'terena', 'guarani', 'artesanato', 'm√∫sica regional']
    }
  };

  // Sistema de parceiros (vazio por enquanto, mas preparado)
  private readonly PARTNERS = {
    // Quando tiver parceiros reais, ser√° preenchido aqui
    // Exemplo: 'restaurante_xyz': { name: 'Restaurante XYZ', category: 'gastronomia', priority: 1 }
  };

  async processQuestion(query: SmartHybridQuery): Promise<SmartHybridResponse> {
    const startTime = Date.now();
    console.log('ü¶¶ Guat√° Smart Hybrid: Processando pergunta...');
    
    try {
      const question = query.question.toLowerCase();
      let answer = "";
      let usedWebSearch = false;
      let partnerSuggestion = "";
      
      // 1. AN√ÅLISE INTELIGENTE DA PERGUNTA
      const analysis = this.analyzeQuestion(question, query.conversationHistory || []);
      
      // 2. VERIFICA√á√ÉO DE PARCEIROS PRIMEIRO
      const partnerMatch = this.checkPartners(question);
      if (partnerMatch) {
        partnerSuggestion = partnerMatch;
      }
      
      // 3. BUSCA NO CONHECIMENTO LOCAL
      const localResult = this.searchLocalKnowledge(question, analysis);
      
      // 4. DECIS√ÉO INTELIGENTE: LOCAL OU WEB?
      if (localResult.found && localResult.confidence > 0.8) {
        // Usar conhecimento local (r√°pido e confi√°vel)
        answer = this.generateLocalResponse(localResult, analysis, partnerSuggestion);
        console.log('‚úÖ Usando conhecimento local');
      } else if (localResult.found && localResult.confidence > 0.5) {
        // Usar local + web para complementar
        answer = this.generateLocalResponse(localResult, analysis, partnerSuggestion);
        const webResult = await this.searchWebIntelligently(question, analysis);
        if (webResult && webResult.confidence > localResult.confidence) {
          answer += `\n\n${webResult.content}`;
          usedWebSearch = true;
          console.log('‚úÖ Usando local + web complementar');
        }
      } else {
        // Buscar na web (quando n√£o souber local)
        const webResult = await this.searchWebIntelligently(question, analysis);
        if (webResult) {
          answer = webResult.content;
          usedWebSearch = true;
          console.log('‚úÖ Usando web search');
        } else {
          answer = this.generateFallbackResponse(question, analysis);
          console.log('‚ö†Ô∏è Usando resposta de fallback');
        }
      }
      
      // 5. ADICIONAR PERSONALIDADE NATURAL
      answer = this.addNaturalPersonality(answer, analysis, partnerSuggestion);
      
      // 6. GERAR PERGUNTAS DE SEGUIMENTO NATURAIS
      const followUpQuestions = this.generateNaturalFollowUps(analysis, localResult.found);
      
      const processingTime = Date.now() - startTime;
      console.log('‚úÖ Guat√° Smart Hybrid: Resposta gerada em', processingTime, 'ms');

      return {
        answer: answer,
        confidence: localResult.found ? localResult.confidence : 0.7,
        sources: localResult.found ? ['conhecimento_local'] : ['web_search'],
        processingTime: processingTime,
        learningInsights: {
          questionType: analysis.type,
          userIntent: analysis.intent,
          knowledgeGaps: localResult.found ? [] : ['conhecimento_especifico'],
          improvementSuggestions: localResult.found ? [] : ['Expandir base local'],
          contextRelevance: localResult.confidence
        },
        adaptiveImprovements: ['Resposta h√≠brida inteligente', 'Personalidade natural'],
        memoryUpdates: [],
        personality: this.personality.name,
        emotionalState: analysis.emotionalState,
        followUpQuestions: followUpQuestions,
        usedWebSearch: usedWebSearch,
        partnerSuggestion: partnerSuggestion || undefined
      };

    } catch (error) {
      console.error('‚ùå Erro no Guat√° Smart Hybrid:', error);
      
      return {
        answer: "Desculpe, n√£o consegui processar sua pergunta no momento. Pode tentar novamente?",
        confidence: 0.3,
        sources: ['erro'],
        processingTime: Date.now() - startTime,
        learningInsights: {
          questionType: 'error',
          userIntent: 'unknown',
          knowledgeGaps: ['technical_issue'],
          improvementSuggestions: ['Melhorar tratamento de erros'],
          contextRelevance: 0
        },
        adaptiveImprovements: ['Melhorar tratamento de erros'],
        memoryUpdates: [],
        personality: 'confused',
        emotionalState: 'confused',
        followUpQuestions: ['Voc√™ pode reformular sua pergunta?', 'Posso te ajudar com algo mais espec√≠fico?'],
        usedWebSearch: false
      };
    }
  }

  /**
   * AN√ÅLISE INTELIGENTE DA PERGUNTA
   */
  private analyzeQuestion(question: string, history: string[]): any {
    const analysis = {
      type: 'general',
      intent: 'information_seeking',
      emotionalState: 'neutral',
      keywords: [],
      context: 'new',
      urgency: 'normal'
    };

    // Detec√ß√£o de tipo de pergunta
    if (question.includes('melhor') || question.includes('recomenda') || question.includes('sugere')) {
      analysis.type = 'recommendation';
      analysis.intent = 'seeking_recommendation';
    } else if (question.includes('como') || question.includes('onde') || question.includes('quando')) {
      analysis.type = 'practical';
      analysis.intent = 'seeking_guidance';
    } else if (question.includes('o que') || question.includes('quais') || question.includes('quem')) {
      analysis.type = 'informational';
      analysis.intent = 'seeking_information';
    } else if (question.includes('oi') || question.includes('ol√°') || question.includes('tudo bem')) {
      analysis.type = 'greeting';
      analysis.intent = 'casual_greeting';
    }

    // Detec√ß√£o de estado emocional
    if (question.includes('!') || question.includes('incr√≠vel') || question.includes('maravilhoso')) {
      analysis.emotionalState = 'excited';
    } else if (question.includes('urgente') || question.includes('r√°pido')) {
      analysis.emotionalState = 'urgent';
      analysis.urgency = 'high';
    } else if (question.includes('n√£o sei') || question.includes('confuso')) {
      analysis.emotionalState = 'confused';
    }

    // Contexto da conversa
    analysis.context = history.length > 0 ? 'continuing' : 'new';

    return analysis;
  }

  /**
   * VERIFICA√á√ÉO DE PARCEIROS
   */
  private checkPartners(question: string): string {
    // Por enquanto retorna vazio, mas quando tiver parceiros reais:
    // - Verificar se a pergunta √© sobre restaurante, hotel, passeio, etc.
    // - Buscar parceiros na categoria relevante
    // - Retornar sugest√£o do parceiro se encontrado
    
    if (Object.keys(this.PARTNERS).length === 0) {
      return ""; // Sem parceiros por enquanto
    }
    
    // L√≥gica para verificar parceiros quando existirem
    return "";
  }

  /**
   * BUSCA NO CONHECIMENTO LOCAL
   */
  private searchLocalKnowledge(question: string, analysis: any): any {
    let bestMatch = null;
    let bestScore = 0;
    
    for (const [key, knowledge] of Object.entries(this.LOCAL_KNOWLEDGE)) {
      let score = 0;
      
      // Verificar palavras-chave
      for (const keyword of knowledge.keywords) {
        if (question.includes(keyword)) {
          score += 1;
        }
      }
      
      // Verificar t√≠tulo
      if (question.includes(knowledge.title.toLowerCase())) {
        score += 2;
      }
      
      if (score > bestScore) {
        bestScore = score;
        bestMatch = { ...knowledge, score };
      }
    }
    
    return {
      found: bestMatch !== null,
      knowledge: bestMatch,
      confidence: bestScore > 0 ? Math.min(bestScore / 3, 1) : 0
    };
  }

  /**
   * BUSCA WEB INTELIGENTE
   */
  private async searchWebIntelligently(question: string, analysis: any): Promise<any> {
    try {
      console.log('üåê Buscando na web para complementar resposta...');
      
      const { data: webData, error: webError } = await supabase.functions.invoke("guata-web-rag", {
        body: {
          question: question,
          state_code: 'MS',
          max_results: 2,
          include_sources: true
        }
      });

      if (!webError && webData?.answer) {
        return {
          content: `Com base em informa√ß√µes atualizadas: ${webData.answer}`,
          confidence: 0.8,
          sources: webData.sources?.map((s: any) => s.title || s.url) || []
        };
      }
      
      return null;
    } catch (error) {
      console.log('‚ö†Ô∏è Busca web falhou:', error);
      return null;
    }
  }

  /**
   * GERA√á√ÉO DE RESPOSTA LOCAL
   */
  private generateLocalResponse(localResult: any, analysis: any, partnerSuggestion: string): string {
    const knowledge = localResult.knowledge;
    let response = `Sobre ${knowledge.title.toLowerCase()}, posso te contar que ${knowledge.content}`;
    
    // Adicionar sugest√£o de parceiro se houver
    if (partnerSuggestion) {
      response += `\n\n${partnerSuggestion}`;
    }
    
    return response;
  }

  /**
   * RESPOSTA DE FALLBACK
   */
  private generateFallbackResponse(question: string, analysis: any): string {
    return `Posso te ajudar com informa√ß√µes sobre destinos, gastronomia, eventos e cultura de Mato Grosso do Sul. ` +
           `Sobre o que voc√™ gostaria de saber mais especificamente?`;
  }

  /**
   * ADICIONAR PERSONALIDADE NATURAL
   */
  private addNaturalPersonality(answer: string, analysis: any, partnerSuggestion: string): string {
    // Personalidade sutil e natural
    if (analysis.type === 'greeting') {
      return `Ol√°! ${answer}`;
    } else if (analysis.emotionalState === 'excited') {
      return `${answer} Que legal que voc√™ se interessa por isso!`;
    } else if (analysis.type === 'recommendation') {
      return `${answer} Espero que essa informa√ß√£o te ajude!`;
    }
    
    return answer;
  }

  /**
   * PERGUNTAS DE SEGUIMENTO NATURAIS
   */
  private generateNaturalFollowUps(analysis: any, hasLocalKnowledge: boolean): string[] {
    if (analysis.type === 'greeting') {
      return [
        "O que voc√™ gostaria de saber sobre Mato Grosso do Sul?",
        "Posso te ajudar a planejar uma viagem?",
        "Tem interesse em algum destino espec√≠fico?"
      ];
    } else if (analysis.type === 'recommendation') {
      return [
        "Quer saber mais detalhes sobre essa recomenda√ß√£o?",
        "Posso te ajudar com outras op√ß√µes?",
        "Tem alguma prefer√™ncia espec√≠fica?"
      ];
    } else if (hasLocalKnowledge) {
      return [
        "Quer saber mais sobre esse assunto?",
        "Posso te contar sobre outros lugares similares?",
        "Tem outras d√∫vidas sobre MS?"
      ];
    } else {
      return [
        "Posso te ajudar com informa√ß√µes sobre destinos do MS?",
        "Quer saber sobre gastronomia ou eventos?",
        "Tem interesse em algum lugar espec√≠fico?"
      ];
    }
  }
}

// Exportar inst√¢ncia √∫nica
export const guataSmartHybridService = new GuataSmartHybridService();
export type { SmartHybridQuery, SmartHybridResponse };





