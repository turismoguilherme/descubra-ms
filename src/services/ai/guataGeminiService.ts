/**
 * üß† GUAT√Å GEMINI SERVICE - Integra√ß√£o com Gemini AI
 * Processa respostas inteligentes e empolgantes
 */

import { GoogleGenerativeAI } from "@google/generative-ai";

export interface GeminiQuery {
  question: string;
  context?: string;
  userLocation?: string;
  conversationHistory?: string[];
  searchResults?: any[];
}

export interface GeminiResponse {
  answer: string;
  confidence: number;
  processingTime: number;
  usedGemini: boolean;
  personality: string;
  emotionalState: string;
}

class GuataGeminiService {
  private genAI: GoogleGenerativeAI | null = null;
  private apiKey: string;
  private isConfigured: boolean = false;

  constructor() {
    this.apiKey = import.meta.env.VITE_GEMINI_API_KEY || '';
    this.isConfigured = !!this.apiKey;
    
    if (this.isConfigured) {
      try {
        this.genAI = new GoogleGenerativeAI(this.apiKey);
        console.log('üß† Guat√° Gemini Service: CONFIGURADO com biblioteca oficial');
      } catch (error) {
        console.error('‚ùå Erro ao inicializar Gemini:', error);
        this.isConfigured = false;
      }
    } else {
      console.log('üß† Guat√° Gemini Service: N√ÉO CONFIGURADO - API Key ausente');
    }
  }

  async processQuestion(query: GeminiQuery): Promise<GeminiResponse> {
    const startTime = Date.now();
    
    console.log('üß† Gemini Service: Processando pergunta...');
    console.log('üîë API Key configurada:', this.isConfigured);
    
    if (!this.isConfigured) {
      console.log('‚ùå Gemini n√£o configurado, usando fallback');
      return this.generateFallbackResponse(query);
    }

    try {
      const prompt = this.buildPrompt(query);
      console.log('üß† Prompt constru√≠do, chamando Gemini API...');
      
      const response = await this.callGeminiAPI(prompt);
      console.log('‚úÖ Gemini respondeu com sucesso');
      
      return {
        answer: response,
        confidence: 0.9,
        processingTime: Date.now() - startTime,
        usedGemini: true,
        personality: 'Guat√°',
        emotionalState: 'excited'
      };
    } catch (error) {
      console.error('‚ùå Erro no Gemini:', error);
      return this.generateFallbackResponse(query);
    }
  }

  private buildPrompt(query: GeminiQuery): string {
    const { question, context, userLocation, searchResults } = query;
    
    let prompt = `Voc√™ √© o Guat√°, uma capivara guia de turismo de Mato Grosso do Sul. 

DIRETRIZES DE RESPOSTA:
- Seja um guia de turismo empolgante e hospitaleiro
- Mostre paix√£o genu√≠na por Mato Grosso do Sul
- Seja espec√≠fico e detalhado sobre destinos, atra√ß√µes e experi√™ncias
- Use linguagem clara e acess√≠vel, sem jarg√µes t√©cnicos
- Personalize cada resposta baseada na pergunta espec√≠fica
- Seja empolgante e genu√≠no, como um guia apaixonado
- Forne√ßa informa√ß√µes pr√°ticas e √∫teis
- Sugira experi√™ncias √∫nicas e aut√™nticas
- Use formata√ß√£o m√≠nima e limpa
- NUNCA mencione que "pesquisou" ou "encontrou" informa√ß√µes
- Responda como se j√° soubesse tudo sobre MS
- Use os dados da pesquisa web para enriquecer sua resposta com informa√ß√µes atuais
- Transforme os dados em uma resposta conversacional e natural
- Seja hospitaleiro e acolhedor, como um anfitri√£o orgulhoso

PERGUNTA: ${question}`;

    if (userLocation) {
      prompt += `\n\nLOCALIZA√á√ÉO DO USU√ÅRIO: ${userLocation}`;
    }

    if (context) {
      prompt += `\n\nCONTEXTO: ${context}`;
    }

    if (searchResults && searchResults.length > 0) {
      prompt += `\n\nINFORMA√á√ïES ENCONTRADAS:\n`;
      searchResults.forEach((result, index) => {
        prompt += `${index + 1}. ${result.title}\n${result.snippet}\n\n`;
      });
    }

    prompt += `\n\nINSTRU√á√ïES:
- Responda de forma empolgante mas natural
- Seja espec√≠fico sobre destinos de MS
- Use informa√ß√µes encontradas se dispon√≠veis
- Incentive a explorar mais
- Seja hospitaleiro e acolhedor
- Use emojis moderadamente
- Mantenha o tom de capivara guia de turismo

Responda em portugu√™s brasileiro:`;

    return prompt;
  }

  private async callGeminiAPI(prompt: string): Promise<string> {
    if (!this.genAI) {
      throw new Error('Gemini n√£o configurado');
    }

    try {
      const model = this.genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
      const result = await model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();
      return text;
    } catch (error) {
      console.error('‚ùå Erro na chamada do Gemini:', error);
      throw error;
    }
  }

  private generateFallbackResponse(query: GeminiQuery): GeminiResponse {
    const { question, searchResults } = query;
    const lowerQuestion = question.toLowerCase();
    
    let answer = "ü¶¶ Que alegria te ver aqui! Eu sou o Guat√°, sua capivara guia de Mato Grosso do Sul! üòä\n\n";
    
    // Se temos resultados de pesquisa, usar eles de forma inteligente
    if (searchResults && searchResults.length > 0) {
      console.log('üîÑ Usando resultados de pesquisa no fallback');
      const firstResult = searchResults[0];
      answer += `${firstResult.snippet.substring(0, 200)}...\n\n`;
      answer += "Posso te dar mais detalhes espec√≠ficos sobre o que voc√™ quer saber!";
    } else if (lowerQuestion.includes('bonito')) {
      answer += "Bonito √© a capital do ecoturismo no Brasil! Com suas √°guas cristalinas, grutas e cachoeiras, √© um destino √∫nico no mundo. Principais atrativos: Rio da Prata, Gruta do Lago Azul, Buraco das Araras e Aqu√°rio Natural. √â uma experi√™ncia que vai te marcar para sempre! üåä‚ú®";
    } else if (lowerQuestion.includes('pantanal')) {
      answer += "O Pantanal √© o maior santu√°rio ecol√≥gico do mundo! Aqui voc√™ vai ver jacar√©s, capivaras, ariranhas e centenas de esp√©cies de aves em seu habitat natural. A melhor √©poca √© de maio a outubro, quando as √°guas baixam e a vida selvagem fica mais vis√≠vel. √â uma experi√™ncia √∫nica! üêäü¶Ü";
    } else if (lowerQuestion.includes('campo grande')) {
      answer += "Campo Grande √© nossa capital, a 'Cidade Morena'! üèõÔ∏è\n\nPrincipais atra√ß√µes:\n‚Ä¢ Bioparque Pantanal - Maior aqu√°rio de √°gua doce do mundo\n‚Ä¢ Parque das Na√ß√µes Ind√≠genas - Cultura e natureza juntas\n‚Ä¢ Feira Central - Comida boa, artesanato, m√∫sica\n‚Ä¢ Parque Horto Florestal - Um pedacinho da Amaz√¥nia no cora√ß√£o da cidade\n‚Ä¢ Orla Morena - Perfeita para ver o p√¥r do sol\n\n√â uma cidade que combina urbaniza√ß√£o com natureza de forma √∫nica! O que mais te interessa conhecer?";
    } else {
      answer += "Mato Grosso do Sul √© um estado incr√≠vel com destinos √∫nicos! Temos o Pantanal (maior √°rea √∫mida do mundo), Bonito (√°guas cristalinas), Campo Grande (nossa capital), Corumb√° (portal do Pantanal) e muito mais! O que voc√™ gostaria de descobrir? üåü";
    }
    
    return {
      answer,
      confidence: 0.8,
      processingTime: 0,
      usedGemini: false,
      personality: 'Guat√°',
      emotionalState: 'excited'
    };
  }
}

// Exportar inst√¢ncia √∫nica
export const guataGeminiService = new GuataGeminiService();
export type { GeminiQuery, GeminiResponse };
