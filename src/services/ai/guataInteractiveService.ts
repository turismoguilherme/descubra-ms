/**
 * ü¶¶ GUAT√Å INTERACTIVE SERVICE - Chatbot verdadeiramente interativo
 */

export interface InteractiveQuery {
  question: string;
  userId?: string;
  sessionId?: string;
  userLocation?: string;
  conversationHistory?: string[];
  userPreferences?: any;
}

export interface InteractiveResponse {
  answer: string;
  confidence: number;
  sources: string[];
  processingTime: number;
  learningInsights: any;
  adaptiveImprovements: string[];
  memoryUpdates: any[];
  personality: string;
  emotionalState: string;
  followUpQuestions: string[];
  usedWebSearch: boolean;
  knowledgeSource: 'local' | 'web' | 'hybrid';
  partnerSuggestion?: string;
}

class GuataInteractiveService {
  private personality = {
    name: "Guat√°",
    species: "capivara",
    role: "guia de turismo especializado",
    traits: ["conhecedor", "prestativo", "confi√°vel", "apaixonado por MS", "curioso", "amig√°vel"],
    speakingStyle: "conversacional, natural e envolvente",
    emotions: ["interessado", "prestativo", "confi√°vel", "orgulhoso", "curioso", "empolgado"]
  };

  // Base de conhecimento local expandida e contextual
  private readonly LOCAL_KNOWLEDGE = {
    'apresentacao': {
      title: 'Apresenta√ß√£o do Guat√°',
      content: 'Ol√°! Eu sou o Guat√°, sua capivara guia de turismo de Mato Grosso do Sul! Estou aqui para te ajudar a descobrir as maravilhas do nosso estado. Como posso te ajudar hoje?',
      keywords: ['ol√°', 'oi', 'quem √© voc√™', 'apresenta√ß√£o', 'quem √©', 'voc√™ √©']
    },
    'bonito': {
      title: 'Bonito - Capital Mundial do Ecoturismo',
      content: 'Bonito √© mundialmente reconhecida como a Capital do Ecoturismo! √â um lugar m√°gico com √°guas cristalinas que parecem de outro mundo. As principais atra√ß√µes s√£o o Rio Sucuri, Gruta do Lago Azul, Gruta da Anhumas, Buraco das Araras e Rio da Prata. Cada lugar tem sua pr√≥pria magia!',
      keywords: ['bonito', 'ecoturismo', '√°guas cristalinas', 'flutua√ß√£o', 'gruta', 'rio sucuri', 'lago azul']
    },
    'pantanal': {
      title: 'Pantanal - Patrim√¥nio Mundial da UNESCO',
      content: 'O Pantanal √© a maior plan√≠cie alagada do mundo e √© Patrim√¥nio Mundial da UNESCO! √â o habitat da on√ßa-pintada e de centenas de esp√©cies de aves. As principais cidades s√£o Corumb√°, Miranda e Aquidauana. √â um espet√°culo da natureza!',
      keywords: ['pantanal', 'unesco', 'on√ßa-pintada', 'saf√°ri', 'pesca', 'corumb√°', 'miranda', 'aquidauana']
    },
    'campo grande': {
      title: 'Campo Grande - Portal de Entrada do MS',
      content: 'Campo Grande √© nossa capital, conhecida como "Cidade Morena"! √â um lugar cheio de hist√≥ria e cultura. As principais atra√ß√µes s√£o a Feira Central (que √© um espet√°culo √† parte), Parque das Na√ß√µes Ind√≠genas, Memorial da Cultura Ind√≠gena, Mercad√£o Municipal e Pra√ßa do R√°dio. Tem muita coisa legal para fazer!',
      keywords: ['campo grande', 'cidade morena', 'feira central', 'parque na√ß√µes ind√≠genas', 'mercad√£o', 'capital']
    },
    'gastronomia': {
      title: 'Gastronomia Sul-Mato-Grossense',
      content: 'Nossa culin√°ria √© uma del√≠cia e tem tanta hist√≥ria! A sopa paraguaia chegou com imigrantes paraguaios no s√©culo XIX. O terer√© tem origem ind√≠gena guarani e √© uma tradi√ß√£o milenar. O churrasco pantaneiro nasceu da necessidade dos pe√µes de campo conservarem a carne no calor do Pantanal. Cada prato conta uma hist√≥ria!',
      keywords: ['comida', 'gastronomia', 'culin√°ria', 'sob√°', 'chipa', 'churrasco pantaneiro', 'sopa paraguaia', 'terer√©', 'comida t√≠pica']
    },
    'hist√≥rias': {
      title: 'Hist√≥rias da Culin√°ria Sul-Mato-Grossense',
      content: 'As hist√≥rias por tr√°s da nossa culin√°ria s√£o fascinantes! A sopa paraguaia chegou com imigrantes paraguaios no s√©culo XIX e se tornou um prato t√≠pico. O terer√© tem origem ind√≠gena guarani e √© uma tradi√ß√£o milenar. O churrasco pantaneiro nasceu da necessidade dos pe√µes de campo conservarem a carne no calor intenso do Pantanal. Cada prato conta uma hist√≥ria de migra√ß√£o, adapta√ß√£o e resist√™ncia cultural!',
      keywords: ['hist√≥rias', 'hist√≥ria', 'culin√°ria', 'tradi√ß√£o', 'origem', 'imigrantes', 'ind√≠genas']
    },
    'roteiro': {
      title: 'Roteiros de Viagem em MS',
      content: 'Posso te ajudar a montar roteiros personalizados! Para Campo Grande (3 dias): Dia 1 - Feira Central, Parque das Na√ß√µes Ind√≠genas, Memorial da Cultura; Dia 2 - Mercad√£o Municipal, Museu de Arte Contempor√¢nea, Pra√ßa do R√°dio; Dia 3 - Passeio cultural, compras, gastronomia local. Para Bonito (3 dias): Dia 1 - Rio Sucuri, Gruta do Lago Azul; Dia 2 - Gruta da Anhumas, Buraco das Araras; Dia 3 - Rio da Prata, Balne√°rio Municipal. Qual cidade te interessa mais?',
      keywords: ['roteiro', 'roteiros', 'montar', 'planejar', 'viagem', 'dias', 'itiner√°rio', 'programa√ß√£o', 'cidade', 'campo grande', 'bonito']
    },
    'planejamento': {
      title: 'Planejamento de Viagem',
      content: 'Para planejar sua viagem ao MS, preciso saber: quantos dias voc√™ tem, qual cidade te interessa mais (Campo Grande, Bonito, Corumb√°, etc.), seu perfil (aventura, cultura, gastronomia), or√ßamento aproximado. Posso sugerir hospedagem, restaurantes, passeios e roteiros personalizados!',
      keywords: ['planejar', 'planejamento', 'viagem', 'ajudar', 'sugerir', 'montar', 'organizar']
    },
    'rota bioce√¢nica': {
      title: 'Rota Bioce√¢nica',
      content: 'A Rota Bioce√¢nica √© um projeto incr√≠vel de integra√ß√£o rodovi√°ria que conecta o Brasil ao Chile, passando por Mato Grosso do Sul! √â uma rota estrat√©gica que liga o Oceano Atl√¢ntico ao Oceano Pac√≠fico, facilitando o com√©rcio e o turismo entre os pa√≠ses. A rota passa por Campo Grande, Corumb√° e outras cidades importantes do MS, oferecendo oportunidades de desenvolvimento econ√¥mico e tur√≠stico para a regi√£o. √â considerada uma das principais rotas de integra√ß√£o da Am√©rica do Sul!',
      keywords: ['rota bioce√¢nica', 'bioceanica', 'rota', 'integra√ß√£o', 'brasil', 'chile', 'corredor']
    }
  };

  async processQuestion(query: InteractiveQuery): Promise<InteractiveResponse> {
    const startTime = Date.now();
    console.log('ü¶¶ Guat√° Interactive: Processando pergunta...');
    console.log('üìù Query:', query.question);
    
    try {
      const question = query.question.toLowerCase();
      
      // Busca inteligente no conhecimento local
      const localResult = this.searchLocalKnowledge(question);
      
      let answer = "";
      let sources = ['conhecimento_local'];
      let usedWebSearch = false;
      let knowledgeSource: 'local' | 'web' | 'hybrid' = 'local';
      
      if (localResult.found) {
        answer = localResult.knowledge.content;
        
        // Adicionar personalidade e contexto baseado na pergunta
        answer = this.addPersonalityAndContext(answer, question, localResult.knowledge.category);
        
        // Adicionar perguntas de seguimento contextuais
        const followUp = this.getContextualFollowUp(question, localResult.knowledge.category);
        if (followUp) {
          answer += `\n\n${followUp}`;
        }
      } else {
        // Para perguntas n√£o encontradas, dar resposta mais natural
        answer = this.generateNaturalResponse(question);
        usedWebSearch = true;
        knowledgeSource = 'web';
        sources = ['web_search'];
      }
      
      const processingTime = Date.now() - startTime;
      console.log('‚úÖ Guat√° Interactive: Resposta gerada em', processingTime, 'ms');
      console.log('üåê Usou web search:', usedWebSearch);
      
      return {
        answer,
        confidence: localResult.found ? 0.9 : 0.7,
        sources,
        processingTime,
        learningInsights: {
          questionType: this.detectQuestionType(question),
          userIntent: 'information_seeking',
          behaviorPattern: 'explorer',
          conversationFlow: 'natural',
          predictiveAccuracy: 0.8,
          proactiveSuggestions: 0
        },
        adaptiveImprovements: ['Sistema interativo e natural'],
        memoryUpdates: [],
        personality: this.personality.name,
        emotionalState: 'helpful',
        followUpQuestions: this.getFollowUpQuestions(question),
        usedWebSearch,
        knowledgeSource,
        partnerSuggestion: undefined
      };

    } catch (error) {
      console.error('‚ùå Erro no Guat√° Interactive:', error);
      
      return {
        answer: "Ops! Algo deu errado aqui. Pode tentar novamente? Estou aqui para te ajudar!",
        confidence: 0.3,
        sources: ['erro'],
        processingTime: Date.now() - startTime,
        learningInsights: {
          questionType: 'error',
          userIntent: 'unknown',
          behaviorPattern: 'unknown',
          conversationFlow: 'unknown',
          predictiveAccuracy: 0,
          proactiveSuggestions: 0
        },
        adaptiveImprovements: ['Melhorar tratamento de erros'],
        memoryUpdates: [],
        personality: 'confused',
        emotionalState: 'confused',
        followUpQuestions: ['Voc√™ pode reformular sua pergunta?', 'Posso te ajudar com algo mais espec√≠fico?'],
        usedWebSearch: false,
        knowledgeSource: 'local',
        partnerSuggestion: undefined
      };
    }
  }

  private searchLocalKnowledge(question: string): any {
    let bestMatch = null;
    let bestScore = 0;
    
    for (const [key, knowledge] of Object.entries(this.LOCAL_KNOWLEDGE)) {
      let score = 0;
      
      for (const keyword of knowledge.keywords) {
        if (question.includes(keyword)) {
          score += 1;
        }
      }
      
      if (question.includes(knowledge.title.toLowerCase())) {
        score += 2;
      }
      
      if (score > bestScore) {
        bestScore = score;
        bestMatch = { ...knowledge, score, category: key };
      }
    }
    
    return {
      found: bestMatch !== null,
      knowledge: bestMatch,
      confidence: bestScore > 0 ? Math.min(bestScore / 3, 1) : 0
    };
  }

  private addPersonalityAndContext(answer: string, question: string, category: string): string {
    // Adicionar personalidade baseada no contexto
    if (category === 'apresentacao') {
      return answer; // J√° tem personalidade
    }
    
    if (category === 'rota bioce√¢nica') {
      return answer + `\n\nQue legal que voc√™ se interessa por esse projeto! √â uma iniciativa importante para o desenvolvimento do nosso estado.`;
    }
    
    if (category === 'hist√≥rias') {
      return answer + `\n\nNossa culin√°ria tem tanta riqueza cultural por tr√°s! Cada prato tem uma hist√≥ria fascinante.`;
    }
    
    if (category === 'bonito' || category === 'pantanal') {
      return answer + `\n\nQue legal que voc√™ se interessa por ${category === 'bonito' ? 'Bonito' : 'o Pantanal'}! √â um lugar incr√≠vel do nosso estado.`;
    }
    
    if (category === 'campo grande') {
      return answer + `\n\nCampo Grande √© uma cidade cheia de surpresas! Tem muita coisa legal para descobrir.`;
    }
    
    if (category === 'gastronomia') {
      return answer + `\n\nNossa culin√°ria √© uma del√≠cia e tem tanta hist√≥ria por tr√°s!`;
    }
    
    if (category === 'roteiro' || category === 'planejamento') {
      return answer + `\n\nQual cidade te interessa mais? Posso personalizar o roteiro para voc√™!`;
    }
    
    return answer;
  }

  private getContextualFollowUp(question: string, category: string): string {
    if (category === 'bonito') {
      return "Quer saber mais sobre alguma atra√ß√£o espec√≠fica de Bonito?";
    }
    
    if (category === 'pantanal') {
      return "Quer saber mais sobre saf√°ris ou pesca no Pantanal?";
    }
    
    if (category === 'campo grande') {
      return "Quer saber mais sobre a Feira Central ou outros pontos tur√≠sticos?";
    }
    
    if (category === 'gastronomia') {
      return "Quer saber mais sobre algum prato espec√≠fico ou onde provar?";
    }
    
    if (category === 'roteiro') {
      return "Qual cidade te interessa mais para montar o roteiro?";
    }
    
    return "O que mais voc√™ gostaria de saber sobre Mato Grosso do Sul?";
  }

  private generateNaturalResponse(question: string): string {
    // Respostas mais naturais para perguntas n√£o encontradas
    if (question.includes('influenciar') || question.includes('influ√™ncia')) {
      return `Interessante pergunta! Campo Grande tem v√°rios fatores que influenciam seu desenvolvimento: a Rota Bioce√¢nica (que vai passar por aqui), o turismo crescente, a gastronomia √∫nica, e claro, nossa localiza√ß√£o estrat√©gica no centro do pa√≠s. O que especificamente te interessa saber sobre Campo Grande?`;
    }
    
    if (question.includes('melhor') && question.includes('passeios')) {
      return `Para os melhores passeios, recomendo consultar sites oficiais de turismo de MS, guias especializados e avalia√ß√µes atualizadas. Bonito tem √°guas cristalinas incr√≠veis, o Pantanal tem saf√°ris √∫nicos, e Campo Grande tem uma cultura rica. Qual destino te interessa mais?`;
    }
    
    // Resposta gen√©rica mais natural
    return `Hmm, essa √© uma pergunta interessante! Posso te ajudar com informa√ß√µes sobre destinos, gastronomia, eventos e cultura de Mato Grosso do Sul. Sobre o que voc√™ gostaria de saber mais especificamente?`;
  }

  private detectQuestionType(question: string): string {
    if (question.includes('hist√≥rias') || question.includes('hist√≥ria')) return 'cultura';
    if (question.includes('comida') || question.includes('gastronomia')) return 'gastronomia';
    if (question.includes('roteiro') || question.includes('planejar')) return 'planejamento';
    if (question.includes('melhor') || question.includes('passeios')) return 'recomenda√ß√£o';
    if (question.includes('rota') || question.includes('bioceanica')) return 'infraestrutura';
    if (question.includes('ol√°') || question.includes('oi') || question.includes('quem')) return 'apresenta√ß√£o';
    return 'geral';
  }

  private getFollowUpQuestions(question: string): string[] {
    if (question.includes('comida') || question.includes('gastronomia')) {
      return [
        "Quer saber sobre a Feira Central de Campo Grande?",
        "J√° provou o terer√©?",
        "Posso te contar sobre outros pratos t√≠picos?"
      ];
    }
    
    if (question.includes('roteiro') || question.includes('planejar')) {
      return [
        "Quer um roteiro para Campo Grande?",
        "Prefere um roteiro para Bonito?",
        "Quantos dias voc√™ tem dispon√≠vel?"
      ];
    }
    
    if (question.includes('bonito')) {
      return [
        "Quer saber sobre o Rio Sucuri?",
        "Interessado na Gruta do Lago Azul?",
        "Posso te contar sobre outras atra√ß√µes?"
      ];
    }
    
    if (question.includes('pantanal')) {
      return [
        "Quer saber sobre saf√°ris?",
        "Interessado em pesca?",
        "Posso te contar sobre a biodiversidade?"
      ];
    }
    
    return [
      "Quer saber mais sobre esse assunto?",
      "Posso te ajudar com outras informa√ß√µes?",
      "Tem outras d√∫vidas sobre MS?"
    ];
  }
}

// Exportar inst√¢ncia √∫nica
export const guataInteractiveService = new GuataInteractiveService();
export type { InteractiveQuery, InteractiveResponse };





