/**
 * ü¶¶ GUAT√Å TRUE API SERVICE - Usando Supabase Edge Functions (Gemini + Google Search)
 * N√ÉO inventa parceiros - s√≥ sugere quando existem na plataforma
 */

import { supabase } from "@/integrations/supabase/client";

export interface TrueApiQuery {
  question: string;
  userId?: string;
  sessionId?: string;
  userLocation?: string;
  conversationHistory?: string[];
  userPreferences?: any;
}

export interface TrueApiResponse {
  answer: string;
  confidence: number;
  sources: string[];
  processingTime: number;
  learningInsights: any;
  adaptiveImprovements: string[];
  memoryUpdates: any[];
  personality: string;
  emotionalState: string;
  followUpQuestions: string[];
  usedWebSearch: boolean;
  knowledgeSource: 'local' | 'web' | 'hybrid';
  partnerSuggestion?: string;
  partnersFound: any[];
  partnerPriority: number;
}

class GuataTrueApiService {
  private personality = {
    name: "Guat√°",
    species: "capivara",
    role: "guia de turismo especializado",
    traits: ["conhecedor", "prestativo", "confi√°vel", "apaixonado por MS", "curioso", "amig√°vel"],
    speakingStyle: "conversacional, natural e envolvente",
    emotions: ["interessado", "prestativo", "confi√°vel", "orgulhoso", "curioso", "empolgado"]
  };

  async processQuestion(query: TrueApiQuery): Promise<TrueApiResponse> {
    const startTime = Date.now();
    console.log('ü¶¶ Guat√° True API: Processando pergunta...');
    console.log('üìù Query:', query.question);
    
    try {
      // NOVO: Usar o sistema inteligente de turismo
      const { guataIntelligentTourismService } = await import('./guataIntelligentTourismService');
      
      console.log('üöÄ Usando Guat√° Intelligent Tourism Service...');
      
      const intelligentResponse = await guataIntelligentTourismService.processQuestion({
        question: query.question,
        userId: query.userId,
        sessionId: query.sessionId,
        userLocation: query.userLocation,
        conversationHistory: query.conversationHistory,
        userPreferences: query.userPreferences
      });
      
      console.log('‚úÖ Guat√° Intelligent Tourism: Resposta gerada em', intelligentResponse.processingTime, 'ms');
      console.log('üìä Fontes utilizadas:', intelligentResponse.sources);
      console.log('üåê Usou web search:', intelligentResponse.usedRealSearch);
      console.log('üîç M√©todo de busca:', intelligentResponse.searchMethod);
      console.log('üè® Dados de turismo:', Object.keys(intelligentResponse.tourismData).length, 'categorias');
      
      // Converter resposta para formato compat√≠vel
      return {
        answer: intelligentResponse.answer,
        confidence: intelligentResponse.confidence,
        sources: intelligentResponse.sources,
        processingTime: intelligentResponse.processingTime,
        learningInsights: intelligentResponse.learningInsights,
        adaptiveImprovements: intelligentResponse.adaptiveImprovements,
        memoryUpdates: intelligentResponse.memoryUpdates,
        personality: intelligentResponse.personality,
        emotionalState: intelligentResponse.emotionalState,
        followUpQuestions: intelligentResponse.followUpQuestions,
        usedWebSearch: intelligentResponse.usedRealSearch,
        knowledgeSource: intelligentResponse.usedRealSearch ? 'web' : 'local',
        partnerSuggestion: undefined,
        partnersFound: [],
        partnerPriority: 0
      };

    } catch (error) {
      console.error('‚ùå Erro no Guat√° True API:', error);
      
      // Fallback para sistema local
      console.log('üîÑ Usando fallback local...');
      const question = query.question.toLowerCase();
      
      return {
        answer: this.generateIntelligentLocalResponse(query.question),
        confidence: 0.7,
        sources: ['conhecimento_local'],
        processingTime: Date.now() - startTime,
        learningInsights: {
          questionType: this.detectQuestionType(question),
          userIntent: 'information_seeking',
          behaviorPattern: 'explorer',
          conversationFlow: 'natural',
          predictiveAccuracy: 0.7,
          proactiveSuggestions: 0
        },
        adaptiveImprovements: ['Sistema com APIs reais', 'Busca web verdadeira', 'Parceiros reais apenas'],
        memoryUpdates: [],
        personality: this.personality.name,
        emotionalState: 'helpful',
        followUpQuestions: this.getFollowUpQuestions(question),
        usedWebSearch: false,
        knowledgeSource: 'local',
        partnerSuggestion: undefined,
        partnersFound: [],
        partnerPriority: 0
      };
    }
  }

  private generateIntelligentLocalResponse(question: string): string {
    const lowerQuestion = question.toLowerCase();
    
    // Apresenta√ß√£o
    if (lowerQuestion.includes('oi') || lowerQuestion.includes('ol√°') || lowerQuestion.includes('quem √©') || lowerQuestion.includes('voc√™ √©')) {
      return `Ol√°! Eu sou o Guat√°, sua capivara guia de turismo de Mato Grosso do Sul! ü¶¶ Estou aqui para te ajudar a descobrir as maravilhas do nosso estado. Posso te contar sobre destinos incr√≠veis como Bonito, o Pantanal, Campo Grande e muito mais. O que voc√™ gostaria de saber?`;
    }
    
    // Bonito
    if (lowerQuestion.includes('bonito')) {
      return `Bonito √© mundialmente reconhecida como a Capital do Ecoturismo! üåä √â um lugar m√°gico com √°guas cristalinas que parecem de outro mundo. As principais atra√ß√µes s√£o o Rio Sucuri, Gruta do Lago Azul, Gruta da Anhumas, Buraco das Araras e Rio da Prata. Cada lugar tem sua pr√≥pria magia! Quer saber mais sobre algum passeio espec√≠fico?`;
    }
    
    // Pantanal
    if (lowerQuestion.includes('pantanal')) {
      return `O Pantanal √© um santu√°rio ecol√≥gico, a maior √°rea √∫mida cont√≠nua do planeta! üêä √â um lugar de biodiversidade incr√≠vel, perfeito para quem ama a natureza e quer ver de perto jacar√©s, capivaras, aves e, com sorte, at√© on√ßas-pintadas. A melhor √©poca para visitar √© na esta√ß√£o seca (maio a setembro) para observa√ß√£o da vida selvagem.`;
    }
    
    // Campo Grande
    if (lowerQuestion.includes('campo grande') || lowerQuestion.includes('capital')) {
      return `Campo Grande √© nossa capital, conhecida como "Cidade Morena"! üèôÔ∏è √â um lugar cheio de hist√≥ria e cultura. As principais atra√ß√µes s√£o a Feira Central (que √© um espet√°culo √† parte), Parque das Na√ß√µes Ind√≠genas, Memorial da Cultura Ind√≠gena, Mercad√£o Municipal e Pra√ßa do R√°dio. Tem muita coisa legal para fazer!`;
    }
    
    // Rota Bioce√¢nica
    if (lowerQuestion.includes('rota bioce√¢nica') || lowerQuestion.includes('bioceanica')) {
      return `A Rota Bioce√¢nica √© um projeto de integra√ß√£o rodovi√°ria que conecta o Brasil ao Chile, passando por Mato Grosso do Sul, Paraguai e Argentina. √â uma rota estrat√©gica que visa facilitar o com√©rcio, o turismo e a integra√ß√£o cultural entre os pa√≠ses da Am√©rica do Sul, ligando o Oceano Atl√¢ntico ao Pac√≠fico. Para MS, significa um grande potencial de desenvolvimento e novas oportunidades!`;
    }
    
    // Resposta padr√£o inteligente
    return `Que pergunta interessante! ü§î Posso te ajudar com informa√ß√µes sobre destinos, gastronomia, eventos, cultura, hospedagem, transporte, clima e muito mais sobre Mato Grosso do Sul. Temos lugares incr√≠veis como Bonito, Pantanal, Campo Grande, Corumb√°, Dourados e muito mais. Sobre o que voc√™ gostaria de saber mais especificamente?`;
  }

  private detectQuestionType(question: string): string {
    const lowerQuestion = question.toLowerCase();
    
    if (lowerQuestion.includes('hotel') || lowerQuestion.includes('hospedagem')) return 'accommodation';
    if (lowerQuestion.includes('restaurante') || lowerQuestion.includes('comida')) return 'dining';
    if (lowerQuestion.includes('evento') || lowerQuestion.includes('festa')) return 'events';
    if (lowerQuestion.includes('passeio') || lowerQuestion.includes('turismo')) return 'tourism';
    if (lowerQuestion.includes('clima') || lowerQuestion.includes('tempo')) return 'weather';
    
    return 'general';
  }

  private getFollowUpQuestions(question: string): string[] {
    const lowerQuestion = question.toLowerCase();
    
    if (lowerQuestion.includes('bonito')) {
      return [
        "Quer saber sobre o Rio Sucuri?",
        "Interessado na Gruta do Lago Azul?",
        "Posso te contar sobre outras atra√ß√µes?"
      ];
    }
    
    if (lowerQuestion.includes('pantanal')) {
      return [
        "Quer saber sobre saf√°ris?",
        "Interessado em pesca?",
        "Posso te contar sobre a biodiversidade?"
      ];
    }
    
    return [
      "Quer saber mais sobre esse assunto?",
      "Posso te ajudar com outras informa√ß√µes?",
      "Tem outras d√∫vidas sobre MS?"
    ];
  }
}

// Exportar inst√¢ncia √∫nica
export const guataTrueApiService = new GuataTrueApiService();