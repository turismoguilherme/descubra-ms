import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "@/hooks/useAuth";
import { useToast } from "@/hooks/use-toast";
import GuataHeader from "@/components/guata/GuataHeader";
import GuataChat from "@/components/guata/GuataChat";
import { useGuataConnection } from "@/hooks/useGuataConnection";
import { useGuataInput } from "@/hooks/useGuataInput";
import SuggestionQuestions from "@/components/guata/SuggestionQuestions";
import { getInitialKnowledgeBase, getDefaultUserInfo } from "@/services/ai/knowledge/guataKnowledgeBase";
import UniversalLayout from "@/components/layout/UniversalLayout";

const Guata = () => {
  const { user, isLoading: authLoading } = useAuth();
  const { toast } = useToast();
  const navigate = useNavigate();
  const { isConnected, connectionChecking } = useGuataConnection();

  // Carrega a base de conhecimento e informações do usuário
  const knowledgeBase = getInitialKnowledgeBase();
  const usuarioInfo = getDefaultUserInfo(user);

  // Versão simplificada para evitar o hook desabilitado
  const [mensagens, setMensagens] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const enviarMensagem = async (inputMensagem: string) => {
    if (inputMensagem.trim() === "") return;
    
    // Adiciona a mensagem do usuário
    const novaMensagemUsuario = {
      id: Date.now(),
      text: inputMensagem,
      isUser: true,
      timestamp: new Date()
    };
    
    setMensagens(prev => [...prev, novaMensagemUsuario]);
    setIsLoading(true);
    
    try {
      // Simula resposta do Guatá
      const responses = [
        "Que pergunta interessante! Mato Grosso do Sul tem muitas opções incríveis para você explorar.",
        "Excelente pergunta! Posso te ajudar com informações sobre Bonito, Pantanal, Campo Grande e muito mais.",
        "Ótima pergunta! MS é um estado repleto de belezas naturais e cultura rica. O que mais te interessa?",
        "Interessante! Posso te dar dicas sobre roteiros, hospedagem, gastronomia local e muito mais.",
        "Perfeita pergunta! Mato Grosso do Sul tem desde o Pantanal até as águas cristalinas de Bonito."
      ];
      
      const randomResponse = responses[Math.floor(Math.random() * responses.length)];
      
      // Simula delay de processamento
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      const novaMensagemBot = {
        id: Date.now() + 1,
        text: randomResponse,
        isUser: false,
        timestamp: new Date()
      };
      
      setMensagens(prev => [...prev, novaMensagemBot]);
      
    } catch (error) {
      console.error("Erro ao enviar mensagem:", error);
      toast({
        title: "Erro",
        description: "Não foi possível enviar a mensagem. Tente novamente.",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleLimparConversa = () => {
    setMensagens([]);
  };

  const enviarFeedback = (positivo: boolean) => {
    console.log("Feedback:", positivo ? "positivo" : "negativo");
  };

  const { 
    inputMensagem, 
    setInputMensagem, 
    isGravandoAudio, 
    toggleMicrofone,
    handleKeyDown: handleKeyDownBase
  } = useGuataInput();

  const handleKeyDown = (e: React.KeyboardEvent) => {
    handleKeyDownBase(e, enviarMensagem);
  };

  const handleSuggestionClick = (pergunta: string) => {
    setInputMensagem(pergunta);
    enviarMensagem(pergunta);
  };

  if (authLoading) {
    return (
      <UniversalLayout>
        <div className="min-h-screen bg-gradient-to-br from-ms-primary-blue via-ms-discovery-teal to-ms-pantanal-green flex items-center justify-center">
          <div className="text-white text-center">
            <div className="w-16 h-16 mx-auto mb-4 animate-pulse bg-white/20 rounded-full"></div>
            <p>Carregando Guatá...</p>
          </div>
        </div>
      </UniversalLayout>
    );
  }

  if (!user) {
    return (
      <UniversalLayout>
        <div className="min-h-screen bg-gradient-to-br from-ms-primary-blue via-ms-discovery-teal to-ms-pantanal-green flex items-center justify-center">
          <div className="text-center text-white">
            <h1 className="text-4xl font-bold mb-4">Acesso Restrito</h1>
            <p className="text-xl mb-6">Faça login para conversar com o Guatá.</p>
            <button 
              onClick={() => navigate("/ms/login")}
              className="bg-ms-accent-orange hover:bg-ms-accent-orange/90 text-white px-8 py-3 rounded-lg font-semibold"
            >
              Fazer Login
            </button>
          </div>
        </div>
      </UniversalLayout>
    );
  }

  return (
    <UniversalLayout>
      <div className="min-h-screen bg-gradient-to-r from-ms-primary-blue to-ms-pantanal-green">
        <main className="flex-grow py-8">
          <div className="ms-container max-w-4xl mx-auto">
            <GuataHeader 
              onClearConversation={handleLimparConversa}
              mensagens={mensagens}
            />
            
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mt-8">
              <div className="lg:col-span-2">
                <GuataChat
                  mensagens={mensagens}
                  inputMensagem={inputMensagem}
                  setInputMensagem={setInputMensagem}
                  enviarMensagem={enviarMensagem}
                  onClearConversation={handleLimparConversa}
                  isGravandoAudio={isGravandoAudio}
                  toggleMicrofone={toggleMicrofone}
                  isLoading={isLoading}
                  isConnected={isConnected}
                  connectionChecking={connectionChecking}
                  handleKeyDown={handleKeyDown}
                  enviarFeedback={enviarFeedback}
                />
              </div>
              
              <div>
                <SuggestionQuestions 
                  onSuggestionClick={handleSuggestionClick}
                />
              </div>
            </div>
          </div>
        </main>
      </div>
    </UniversalLayout>
  );
};

export default Guata;




